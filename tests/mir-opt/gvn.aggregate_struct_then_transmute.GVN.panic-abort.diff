- // MIR for `aggregate_struct_then_transmute` before GVN
+ // MIR for `aggregate_struct_then_transmute` after GVN
  
  fn aggregate_struct_then_transmute(_1: u16) -> () {
      debug id => _1;
      let mut _0: ();
      let _2: MyId;
      let mut _3: u16;
      let _4: ();
      let mut _5: u16;
      let mut _6: MyId;
      let mut _8: u16;
      let mut _9: std::marker::PhantomData<std::string::String>;
      let _10: ();
      let mut _11: u16;
      let mut _12: TypedId<std::string::String>;
      let mut _14: u16;
      let _15: ();
      let mut _16: u16;
      let mut _17: std::result::Result<Never, u16>;
      let mut _19: u16;
      let _20: ();
      let mut _21: u32;
      let mut _22: std::option::Option<u16>;
      let mut _24: u16;
      let _25: ();
      let mut _26: i16;
      let mut _27: MyId;
      let mut _29: u16;
      let mut _30: u16;
      let _31: ();
      let mut _32: u32;
      let mut _33: aggregate_struct_then_transmute::Pair;
      let mut _35: u16;
      let mut _36: u16;
      let _37: ();
      let mut _38: u16;
      let mut _39: aggregate_struct_then_transmute::Pair;
      scope 1 {
          debug a => _2;
          let _7: TypedId<std::string::String>;
          scope 2 {
              debug b => _7;
              let _13: std::result::Result<Never, u16>;
              scope 3 {
                  debug c => _13;
                  let _18: std::option::Option<u16>;
                  scope 4 {
                      debug d => _18;
                      let _23: MyId;
                      scope 5 {
                          debug e => _23;
                          let _28: aggregate_struct_then_transmute::Pair;
                          scope 6 {
                              debug f => _28;
                              let _34: aggregate_struct_then_transmute::Pair;
                              scope 7 {
                                  debug g => _34;
                              }
                          }
                      }
                  }
              }
          }
      }
  
      bb0: {
-         StorageLive(_2);
+         nop;
          StorageLive(_3);
          _3 = copy _1;
-         _2 = MyId(move _3);
+         _2 = MyId(copy _1);
          StorageDead(_3);
          StorageLive(_4);
          StorageLive(_5);
          StorageLive(_6);
-         _6 = move _2;
-         _5 = move _6 as u16 (Transmute);
+         _6 = copy _2;
+         _5 = copy _1;
          StorageDead(_6);
-         _4 = opaque::<u16>(move _5) -> [return: bb1, unwind unreachable];
+         _4 = opaque::<u16>(copy _1) -> [return: bb1, unwind unreachable];
      }
  
      bb1: {
          StorageDead(_5);
          StorageDead(_4);
-         StorageLive(_7);
+         nop;
          StorageLive(_8);
          _8 = copy _1;
          StorageLive(_9);
-         _9 = PhantomData::<String>;
-         _7 = TypedId::<String>(move _8, move _9);
+         _9 = const PhantomData::<String>;
+         _7 = TypedId::<String>(copy _1, const PhantomData::<String>);
          StorageDead(_9);
          StorageDead(_8);
          StorageLive(_10);
          StorageLive(_11);
          StorageLive(_12);
-         _12 = move _7;
-         _11 = move _12 as u16 (Transmute);
+         _12 = copy _7;
+         _11 = copy _1;
          StorageDead(_12);
-         _10 = opaque::<u16>(move _11) -> [return: bb2, unwind unreachable];
+         _10 = opaque::<u16>(copy _1) -> [return: bb2, unwind unreachable];
      }
  
      bb2: {
          StorageDead(_11);
          StorageDead(_10);
-         StorageLive(_13);
+         nop;
          StorageLive(_14);
          _14 = copy _1;
-         _13 = Result::<Never, u16>::Err(move _14);
+         _13 = Result::<Never, u16>::Err(copy _1);
          StorageDead(_14);
          StorageLive(_15);
          StorageLive(_16);
          StorageLive(_17);
-         _17 = move _13;
-         _16 = move _17 as u16 (Transmute);
+         _17 = copy _13;
+         _16 = copy _1;
          StorageDead(_17);
-         _15 = opaque::<u16>(move _16) -> [return: bb3, unwind unreachable];
+         _15 = opaque::<u16>(copy _1) -> [return: bb3, unwind unreachable];
      }
  
      bb3: {
          StorageDead(_16);
          StorageDead(_15);
-         StorageLive(_18);
+         nop;
          StorageLive(_19);
          _19 = copy _1;
-         _18 = Option::<u16>::Some(move _19);
+         _18 = Option::<u16>::Some(copy _1);
          StorageDead(_19);
          StorageLive(_20);
          StorageLive(_21);
          StorageLive(_22);
          _22 = copy _18;
-         _21 = move _22 as u32 (Transmute);
+         _21 = copy _18 as u32 (Transmute);
          StorageDead(_22);
          _20 = opaque::<u32>(move _21) -> [return: bb4, unwind unreachable];
      }
  
      bb4: {
          StorageDead(_21);
          StorageDead(_20);
          StorageLive(_23);
          StorageLive(_24);
          _24 = copy _1;
-         _23 = MyId(move _24);
+         _23 = copy _2;
          StorageDead(_24);
          StorageLive(_25);
          StorageLive(_26);
          StorageLive(_27);
-         _27 = move _23;
-         _26 = move _27 as i16 (Transmute);
+         _27 = copy _2;
+         _26 = copy _1 as i16 (Transmute);
          StorageDead(_27);
          _25 = opaque::<i16>(move _26) -> [return: bb5, unwind unreachable];
      }
  
      bb5: {
          StorageDead(_26);
          StorageDead(_25);
-         StorageLive(_28);
+         nop;
          StorageLive(_29);
          _29 = copy _1;
          StorageLive(_30);
          _30 = copy _1;
-         _28 = Pair(move _29, move _30);
+         _28 = Pair(copy _1, copy _1);
          StorageDead(_30);
          StorageDead(_29);
          StorageLive(_31);
          StorageLive(_32);
          StorageLive(_33);
-         _33 = move _28;
-         _32 = move _33 as u32 (Transmute);
+         _33 = copy _28;
+         _32 = copy _28 as u32 (Transmute);
          StorageDead(_33);
          _31 = opaque::<u32>(move _32) -> [return: bb6, unwind unreachable];
      }
  
      bb6: {
          StorageDead(_32);
          StorageDead(_31);
          StorageLive(_34);
          StorageLive(_35);
          _35 = copy _1;
          StorageLive(_36);
          _36 = copy _1;
-         _34 = Pair(move _35, move _36);
+         _34 = copy _28;
          StorageDead(_36);
          StorageDead(_35);
          StorageLive(_37);
          StorageLive(_38);
          StorageLive(_39);
-         _39 = move _34;
-         _38 = move _39 as u16 (Transmute);
+         _39 = copy _28;
+         _38 = copy _28 as u16 (Transmute);
          StorageDead(_39);
          _37 = opaque::<u16>(move _38) -> [return: bb7, unwind unreachable];
      }
  
      bb7: {
          StorageDead(_38);
          StorageDead(_37);
          _0 = const ();
          StorageDead(_34);
-         StorageDead(_28);
+         nop;
          StorageDead(_23);
-         StorageDead(_18);
-         StorageDead(_13);
-         StorageDead(_7);
-         StorageDead(_2);
+         nop;
+         nop;
+         nop;
+         nop;
          return;
      }
  }
  
