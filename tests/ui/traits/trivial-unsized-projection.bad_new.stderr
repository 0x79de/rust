error[E0271]: type mismatch resolving `<[()] as Bad>::Assert normalizes-to <[()] as Bad>::Assert`
  --> $DIR/trivial-unsized-projection.rs:20:12
   |
LL | const FOO: <[()] as Bad>::Assert = todo!();
   |            ^^^^^^^^^^^^^^^^^^^^^ types differ
   |
   = note: statics and constants must have a statically known size

error[E0277]: the size for values of type `[()]` cannot be known at compilation time
  --> $DIR/trivial-unsized-projection.rs:20:12
   |
LL | const FOO: <[()] as Bad>::Assert = todo!();
   |            ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[()]`
note: required by a bound in `Bad::Assert`
  --> $DIR/trivial-unsized-projection.rs:14:15
   |
LL |     type Assert
   |          ------ required by a bound in this associated type
LL |     where
LL |         Self: Sized;
   |               ^^^^^ required by this bound in `Bad::Assert`
help: consider relaxing the implicit `Sized` restriction
   |
LL |     type Assert: ?Sized
   |                ++++++++

error[E0277]: the size for values of type `[()]` cannot be known at compilation time
  --> $DIR/trivial-unsized-projection.rs:20:12
   |
LL | const FOO: <[()] as Bad>::Assert = todo!();
   |            ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[()]`
note: required by a bound in `Bad::Assert`
  --> $DIR/trivial-unsized-projection.rs:14:15
   |
LL |     type Assert
   |          ------ required by a bound in this associated type
LL |     where
LL |         Self: Sized;
   |               ^^^^^ required by this bound in `Bad::Assert`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
help: consider relaxing the implicit `Sized` restriction
   |
LL |     type Assert: ?Sized
   |                ++++++++

error[E0271]: type mismatch resolving `<[()] as Bad>::Assert normalizes-to <[()] as Bad>::Assert`
  --> $DIR/trivial-unsized-projection.rs:20:36
   |
LL | const FOO: <[()] as Bad>::Assert = todo!();
   |                                    ^^^^^^^ types differ
   |
   = note: this error originates in the macro `todo` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0271, E0277.
For more information about an error, try `rustc --explain E0271`.
