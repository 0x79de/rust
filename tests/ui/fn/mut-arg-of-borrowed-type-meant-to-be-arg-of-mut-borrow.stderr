error[E0308]: mismatched types
  --> $DIR/mut-arg-of-borrowed-type-meant-to-be-arg-of-mut-borrow.rs:6:14
   |
LL | fn change_object(mut object: &Object) {
   |                              ------- expected due to this parameter type
LL |     let object2 = Object;
LL |     object = object2;
   |              ^^^^^^^ expected `&Object`, found `Object`
   |
help: consider borrowing here
   |
LL |     object = &object2;
   |              +

error: value assigned to `object` is never read
  --> $DIR/mut-arg-of-borrowed-type-meant-to-be-arg-of-mut-borrow.rs:11:5
   |
LL |     object = &object2;
   |     ^^^^^^
   |
   = help: maybe it is overwritten before being read?
note: the lint level is defined here
  --> $DIR/mut-arg-of-borrowed-type-meant-to-be-arg-of-mut-borrow.rs:1:9
   |
LL | #![deny(unused_assignments, unused_variables)]
   |         ^^^^^^^^^^^^^^^^^^

error: variable `object` is assigned to, but never used
  --> $DIR/mut-arg-of-borrowed-type-meant-to-be-arg-of-mut-borrow.rs:9:23
   |
LL | fn change_object2(mut object: &Object) {
   |                       ^^^^^^
   |
   = note: consider using `_object` instead
note: the lint level is defined here
  --> $DIR/mut-arg-of-borrowed-type-meant-to-be-arg-of-mut-borrow.rs:1:29
   |
LL | #![deny(unused_assignments, unused_variables)]
   |                             ^^^^^^^^^^^^^^^^

error[E0597]: `object2` does not live long enough
  --> $DIR/mut-arg-of-borrowed-type-meant-to-be-arg-of-mut-borrow.rs:11:14
   |
LL | fn change_object2(mut object: &Object) {
   |                               - let's call the lifetime of this reference `'1`
LL |     let object2 = Object;
   |         ------- binding `object2` declared here
LL |     object = &object2;
   |     ---------^^^^^^^^
   |     |        |
   |     |        borrowed value does not live long enough
   |     assignment requires that `object2` is borrowed for `'1`
...
LL | }
   | - `object2` dropped here while still borrowed

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0308, E0597.
For more information about an error, try `rustc --explain E0308`.
